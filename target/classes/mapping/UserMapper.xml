<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qcby.telemedicine.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.qcby.telemedicine.entity.User" >
    <id column="userId" property="userId" jdbcType="BIGINT" />
    <result column="userAccount" property="userAccount" jdbcType="CHAR" />
    <result column="userPwd" property="userPwd" jdbcType="CHAR" />
    <result column="userHead" property="userHead" jdbcType="VARCHAR" />
    <result column="userName" property="userName" jdbcType="CHAR" />
    <result column="userAge" property="userAge" jdbcType="INTEGER" />
    <result column="userSex" property="userSex" jdbcType="BIT" />
    <result column="userIdNumber" property="userIdNumber" jdbcType="CHAR" />
    <result column="userPhone" property="userPhone" jdbcType="CHAR" />
    <result column="userAddress" property="userAddress" jdbcType="VARCHAR" />
    <result column="medicalHistory" property="medicalHistory" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    userId, userAccount, userPwd, userHead, userName, userAge, userSex, userIdNumber, 
    userPhone, userAddress, medicalHistory
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user
    where userId = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from user
    where userId = #{userId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.qcby.telemedicine.entity.User" >
    insert into user (userId, userAccount, userPwd, 
      userHead, userName, userAge, 
      userSex, userIdNumber, userPhone, 
      userAddress, medicalHistory)
    values (#{userId,jdbcType=BIGINT}, #{userAccount,jdbcType=CHAR}, #{userPwd,jdbcType=CHAR}, 
      #{userHead,jdbcType=VARCHAR}, #{userName,jdbcType=CHAR}, #{userAge,jdbcType=INTEGER}, 
      #{userSex,jdbcType=BIT}, #{userIdNumber,jdbcType=CHAR}, #{userPhone,jdbcType=CHAR}, 
      #{userAddress,jdbcType=VARCHAR}, #{medicalHistory,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.qcby.telemedicine.entity.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        userId,
      </if>
      <if test="userAccount != null" >
        userAccount,
      </if>
      <if test="userPwd != null" >
        userPwd,
      </if>
      <if test="userHead != null" >
        userHead,
      </if>
      <if test="userName != null" >
        userName,
      </if>
      <if test="userAge != null" >
        userAge,
      </if>
      <if test="userSex != null" >
        userSex,
      </if>
      <if test="userIdNumber != null" >
        userIdNumber,
      </if>
      <if test="userPhone != null" >
        userPhone,
      </if>
      <if test="userAddress != null" >
        userAddress,
      </if>
      <if test="medicalHistory != null" >
        medicalHistory,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userAccount != null" >
        #{userAccount,jdbcType=CHAR},
      </if>
      <if test="userPwd != null" >
        #{userPwd,jdbcType=CHAR},
      </if>
      <if test="userHead != null" >
        #{userHead,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=CHAR},
      </if>
      <if test="userAge != null" >
        #{userAge,jdbcType=INTEGER},
      </if>
      <if test="userSex != null" >
        #{userSex,jdbcType=BIT},
      </if>
      <if test="userIdNumber != null" >
        #{userIdNumber,jdbcType=CHAR},
      </if>
      <if test="userPhone != null" >
        #{userPhone,jdbcType=CHAR},
      </if>
      <if test="userAddress != null" >
        #{userAddress,jdbcType=VARCHAR},
      </if>
      <if test="medicalHistory != null" >
        #{medicalHistory,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qcby.telemedicine.entity.User" >
    update user
    <set >
      <if test="userAccount != null" >
        userAccount = #{userAccount,jdbcType=CHAR},
      </if>
      <if test="userPwd != null" >
        userPwd = #{userPwd,jdbcType=CHAR},
      </if>
      <if test="userHead != null" >
        userHead = #{userHead,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        userName = #{userName,jdbcType=CHAR},
      </if>
      <if test="userAge != null" >
        userAge = #{userAge,jdbcType=INTEGER},
      </if>
      <if test="userSex != null" >
        userSex = #{userSex,jdbcType=BIT},
      </if>
      <if test="userIdNumber != null" >
        userIdNumber = #{userIdNumber,jdbcType=CHAR},
      </if>
      <if test="userPhone != null" >
        userPhone = #{userPhone,jdbcType=CHAR},
      </if>
      <if test="userAddress != null" >
        userAddress = #{userAddress,jdbcType=VARCHAR},
      </if>
      <if test="medicalHistory != null" >
        medicalHistory = #{medicalHistory,jdbcType=VARCHAR},
      </if>
    </set>
    where userId = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qcby.telemedicine.entity.User" >
    update user
    set userAccount = #{userAccount,jdbcType=CHAR},
      userPwd = #{userPwd,jdbcType=CHAR},
      userHead = #{userHead,jdbcType=VARCHAR},
      userName = #{userName,jdbcType=CHAR},
      userAge = #{userAge,jdbcType=INTEGER},
      userSex = #{userSex,jdbcType=BIT},
      userIdNumber = #{userIdNumber,jdbcType=CHAR},
      userPhone = #{userPhone,jdbcType=CHAR},
      userAddress = #{userAddress,jdbcType=VARCHAR},
      medicalHistory = #{medicalHistory,jdbcType=VARCHAR}
    where userId = #{userId,jdbcType=BIGINT}
  </update>

<!--  自己添加的sql语句-->
  <select id="selectByAccountAndPwd" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where userAccount = #{account}
    and  userPwd = #{pwd}
  </select>
</mapper>